CREATE TABLE Users (
	user_id int(20) NOT NULL AUTO_INCREMENT,
  	name varchar(50) NOT NULL,  	
	email varchar(100) NOT NULL,
  	password varchar(50) NOT NULL,
  	phoneno DATE NOT NULL,
  	PRIMARY KEY (user_id),
  	UNIQUE KEY email (email)
);

CREATE TABLE Products (
	product_id int(100) NOT NULL AUTO_INCREMENT,
	product_name varchar(50) NOT NULL,
	product_url varchar(255) NOT NULL,
	price DECIMAL(10,2) NOT NULL,
	category varchar(50) NOT NULL,
	description varchar(100) NOT NULL,
	origin varchar(50) NOT NULL,
	instock int(255) NOT NULL,
	calories DECIMAL (10,2) NOT NULL,
	import_date DATE,
	PRIMARY KEY (product_id)
);

CREATE TABLE Orders (
	order_id int(50) NOT NULL AUTO_INCREMENT,
	user_id int(20),
	payment_id int(50),
	total_price DECIMAL(10,2),
	delivery_method varchar(20),
	PRIMARY KEY (order_id),
	FOREIGN KEY (user_id) REFERENCES Users (user_id),
	FOREIGN KEY (payment_id) REFERENCES Payment (payment_id)
);

CREATE TABLE Payment (
	payment_id int(50) NOT NULL AUTO_INCREMENT,
	user_id int(20),
	purchased_date DATE,
	payment_method varchar(20),
	payment_status varchar(20),
	PRIMARY KEY (payment_id),
	FOREIGN KEY (user_id) REFERENCES Users (user_id)
);

CREATE TABLE OrderedItem (
	product_id int(100),
	order_id int(50),
	quantity int(255),
	FOREIGN KEY (product_id) REFERENCES Products (product_id),
	FOREIGN KEY (order_id) REFERENCES Orders (order_id)
);

CREATE TABLE VisaInfo (
	visa_number int(16) NOT NULL,
	user_id int(20),
	cvc int(4) NOT NULL,
	due_date DATE,
	PRIMARY KEY (visa_number),
	FOREIGN KEY (user_id) REFERENCES Users (user_id),
	UNIQUE KEY (visa_number)
);